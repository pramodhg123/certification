---
swagger: "2.0"
info:
  version: "0.9"
  title: "Interop"
host: "localhost:8081"
basePath: "/"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /clientStart:
    get:
      description: "Returns OCF Client Status to the caller after starting the client.\
        \ Started is the response"
      operationId: "clientStart"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/clientStartResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "clientStart"
  /clientStop:
    get:
      description: "Returns OCF Client Stop Status to the caller. Stopped or Running\
        \ is the response string"
      operationId: "clientStop"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/clientStopResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "clientStop"
  /clientStatus:
    get:
      description: "Returns OCF Client Status to the caller.  Stopped or Running\
        \ is the response string"
      operationId: "clientStatus"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/clientStatusResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "clientStatus"
  /getVersion:
    get:
      description: "Returns version details of the software and OS to the caller"
      operationId: "getVersion"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getVersionResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "clientStatus"
  /createDevice:
    get:
      description: "Creates the device and returns the status and UUID. \
           \ deviceType is the standard device types as per OCF.Ex: oic.d.light"
      operationId: "createDevice"
      parameters:
      - name: "deviceType"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/createDeviceResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "createDevice"
  /deleteDevice:
    get:
      description: "Returns Deletion status to the caller. \
       \ Input parameter id is the uuid of the device"
      operationId: "deleteDevice"
      parameters:
      - name: "id"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/deleteDeviceResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "deleteDevice"
  /otmResetDevice:
    get:
      description: "Performs OTM Reset of Device and returns status to the caller.\
              \ Input parameter id is the uuid of the device"
      operationId: "otmResetDevice"
      parameters:
      - name: "id"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/otmResetDeviceResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "otmResetDevice"
  /shutdownDevice:
    get:
      description: "Performs shutdown of the device and returns status to the caller. \
       \ Input parameter id is the uuid of the device"
      operationId: "shutdownDevice"
      parameters:
      - name: "id"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/shutdownDeviceResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "shutdownDevice"
  /restartDevice:
    get:
      description: "Restarts the device and returns status to the caller. \
            \ Input parameter id is the uuid of the device"
      operationId: "restartDevice"
      parameters:
      - name: "id"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/restartDeviceResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "restartDevice"
  /getIP:
    get:
      description: "Returns IP of the system to the caller"
      operationId: "getIP"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getIPResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "getIP"
  /getNetworkDetails:
    get:
      description: "Returns Network details of the system to the caller"
      operationId: "getNetworkDetails"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getNetworkDetailsResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "getNetworkDetailsResponse"
  /showShutdownDevice:
    get:
      description: "Returns shutdown devices of the system to the caller"
      operationId: "showShutdownDevice"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/showShutdownDeviceResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "showShutdownDevice"
  /createCustomDevice:
    post:
      description: "Creates a custom device and returns status to the caller"
      operationId: "createCustomDevice"
      parameters:
      - in: "body"
        name: "createCustomDevice"
        description: "Create a custom device"
        required: true
        schema:
          $ref: "#/definitions/createCustomDeviceData"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/createCustomDeviceResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "createCustomDevice"
  /getPollingData:
    get:
      description: "Returns polling data of the specific device to the caller. \
           \ Input parameter id is the uuid of the device"
      operationId: "getPollingData"
      parameters:
      - name: "id"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getPollingDataResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "getPollingDataResponse"
  /getDeviceSettingData:
    get:
      description: "Returns device setting data to the caller. \
           \ Input parameter id is the uuid of the device"
      operationId: "getDeviceSettingData"
      parameters:
      - name: "id"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getDeviceSettingDataResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "getDeviceSettingDataResponse"
  /updateOTMSupport:
    post:
      description: "Set OTM support of the device"
      operationId: "updateOTMSupport"
      parameters:
      - in: "body"
        name: "OTMUpdate"
        description: "OTM update support."
        required: true
        schema:
          $ref: "#/definitions/OTMUpdate"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/updateOTMSupportResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "updateOTMSupportResponse"
  /turnOffDevices:
    get:
      description: "turns off all the devices available"
      operationId: "turnOffDevices"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/turnOffDevicesResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "turnOffDevices"
  /saveProfile:
    get:
      description: "saves the devices available information in a json file"
      operationId: "saveProfile"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/saveProfileResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "saveProfile"
  /downloadProfile:
    get:
      description: "saves the devices available information in a json file"
      operationId: "downloadProfile"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/downloadProfileResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "downloadProfile"
  /loadProfile:
    get:
      description: "Instantiates all the devices available in the json file"
      operationId: "loadProfile"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/loadProfileResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "loadProfile"
  /downloadLogfile:
    get:
      description: "returns the log file available on the device"
      operationId: "downloadLogfile"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/downloadLogfileResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "downloadLogfile"
  /swagger:
    x-swagger-pipe: "swagger_raw"
definitions:
  clientStartResponse:
    properties:
      status:
        type: "string"
        description: "The status of the client.Started or Error"
    example:
      status: "started"
  clientStopResponse:
    properties:
      status:
        type: "string"
    example:
      status: "status"
  clientStatusResponse:
    properties:
      status:
        type: "string"
    example:
      status: "Running or Stopped"
  getVersionResponse:
    properties:
      toolVersion:
        type: "string"
      iotivityVersion:
        type: "string"
      buildDateTime:
        type: "string"
      os:
        type: "string"
      nodeVersion:
        type: "string"
      iotivityPatchApplied:
        type: "string"
    example:
      toolVersion: "0.8"
      os: "Linux"
      iotivityVersion: "1.3.1"
      buildDateTime: "11-04-2019 16:20"
      nodeVersion: "8.0"
      iotivityPatchApplied: "2222"
  createDeviceResponse:
    properties:
      status:
        type: "string"
      data:
        type: "string"
    example:
      status: "status"
      data: "uuid of the device created - 1111-2222-2222-22222"
  deleteDeviceResponse:
    properties:
      status:
        type: "string"
    example:
      status: "success or failure"
  otmResetDeviceResponse:
    properties:
      status:
        type: "string"
    example:
      status: "status"
  shutdownDeviceResponse:
    properties:
      status:
        type: "string"
    example:
      status: "status"
  restartDeviceResponse:
    properties:
      status:
        type: "string"
    example:
      status: "status"
  getIPResponse:
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "string"
    example:
      status: "status"
  getNetworkDetailsResponse:
    properties:
      status:
        type: "string"
    example:
      status: "status"
  showShutdownDeviceResponse:
    properties:
      status:
        type: "string"
      data:
        type: "object"
        properties: {}
    example:
      status: "status"
  createCustomDeviceResponse:
    properties:
      status:
        type: "string"
    example:
      status: "status"
  getPollingDataResponse:
    properties:
      status:
        type: "string"
      data:
        type: "object"
        properties: {}
    example:
      status: "string"
      data: "object"
  getDeviceSettingDataResponse:
    properties:
      status:
        type: "string"
      data:
        type: "object"
        properties:
            justworks:
                type: "boolean"
            randompin:
                type: "boolean"
            mfcg:
                type: "boolean"
    example:
      status: "string"
      data: "object"
  updateOTMSupportResponse:
    properties:
      status:
        type: "string"
      data:
        type: "object"
        properties: {}
    example:
      status: "string"
      data: "object"
  OTMUpdate:
    type: "object"
    required:
    - "id"
    - "justworks"
    - "mfCertificate"
    - "randompin"
    properties:
      id:
        type: "string"
      justworks:
        type: "boolean"
      randompin:
        type: "boolean"
      mfCertificate:
        type: "boolean"
    example:
      mfCertificate: true
      justworks: true
      id: "id"
      randompin: true
  turnOffDevicesResponse:
    properties:
      status:
        type: "string"
    example:
      status: "status"
  saveProfileResponse:
    properties:
      status:
        type: "string"
    example:
      status: "status"
  downloadProfileResponse:
    properties:
      status:
        type: "string"
    example:
      status: "status"
  loadProfileResponse:
    properties:
      status:
        type: "string"
    example:
      status: "status"
  downloadLogfileResponse:
    properties:
      status:
        type: "string"
    example:
      status: "status"
  createCustomDeviceData:
    type: "object"
    required:
    - "id"
    - "deviceType"
    properties:
      id:
        type: "string"
      deviceType:
        type: "string"
    example:
      id: "11111-2222-3333-4444-5555"
      deviceType: "oic.d.ac"
  ErrorResponse:
    required:
    - "status"
    properties:
      status:
        type: "string"
